Stored Procduces are named groups of T-SQL statements that can be:

1. Used and Re-used whenever they're needed
2. Manipulate Data
3. Perform Administrative Actions on the server

Advantages
- Re-use of code, eliminates error and reduce development time.
- Security - perform certain operations without giving permissions to underlying tables. Control which processes and activities are allowed, thereby improving security.
- Quality improvement - error handling
- Performance improvement - execution plan can be reused and is quicker
- Lower maintainence - when design changes, only the procedures are updated providing a clean separation from data/application tier.

3 Types of Stored Procedures

1. User-defined stored procedures
2. Temporary stored procedures
3. System Stored procedures


EXEC dbo.getUsersName

- System Procedures
sys.system_objects
sys.system_parameters

- User-Defined   
EXEC sys.sp_who    (Best practice to include the sys.schema

https://learn.microsoft.com/en-us/training/modules/create-stored-procedures-table-valued-functions/2-call

Pass Input to Stored Procedures

EXEC <schema_name>.<procedure_name> @<parameter_name> = 'VALUE'

EXEC Products.ProductBySupplier @supplierID = 5
EXEC Customers.CustomerID @customerID = 5

EXEC customers.customerid @CustomerID


Default Values

If a parameter was declared with a default value, you don't have to pass value when the stored procedure is run. If a value is passed it will be used, 
but if no value is passed, then the default is used.

CREATE PROCEDURE Sales.SalesYTD
@SalesPerson NVARCHAR(50) = NULL
AS ...


CREATE PROCEDURE Production.uspGetList @Product varchar(40)
    , @MaxPrice money   
    , @ComparePrice money OUTPUT  
    , @ListPrice money OUT  
AS







